################################################################################

GSAC-WS Installation
README, Part 1.  Creating the Initial GSAC Server at your repository

October 21, 2013.  SKW UNAVCO

UNAVCO's GSAC-WS, called GSAC, is a package of code for web services. With GSAC a geodesy or geophysics data center can quickly offer a set of complete, 
consistent, modern web services for remote users to query the data center about stations and instruments, and download data files. 

The UNAVCO GSAC-WS home page is at http://facility.unavco.org/data/gsacws/gsacws.html. 
The GSAC Web Services document, "UNAVCO GSAC WS: Web Services for Geodesy Data Repositories" (http://facility.unavco.org/data/gsacws/docs/UNAVCO_GSAC_Web_services.pdf)
introduces GSAC.  The GSAC User Guide "UNAVCO GSAC WS: User Guide for GSAC Data Repositories" (http://facility.unavco.org/data/gsacws/UNAVCO_GSAC_User_Guide.pdf)
is for persons using data repositories powered by GSAC.


This README file describes the first steps in GSAC installation, and is the first of two README files detailing GSAC installation.  
This README file is "Part 1" of two GSAC README files for installation, and is in gsac-code/src/org/gsac/ in the GSAC package available from SourceForge as described below.

################################################################################

Installing GSAC Web Services -- What You Need

You can install GSAC web services for a data repository when you have:

    a database with complete metadata about your data center's holdings, including metadata about sites (stations or monuments) and their instruments, and about their data files (if any). GSAC can read Oracle, Postgres, or MySQL. You can use an existing database you have, with no changes to it, but new Java code for GSAC code will be needed to read the database. Or you can make a new database using the Prototype  GSAC database schema, populating it with your data values, which allows you to use GSAC code with very few changes. See more in the GSAC Database section, below. 

    a web server for GSAC web pages. Running GSAC with the Tomcat application server is common, but Tomcat is optional. GSAC can use its included application server, Jetty. 

    usually GNSS data files from instruments for remote users to download. GSAC can provide discovery and download of geodesy data files like RINEX files. This is optional. 

    Also, if you want to offer data file downloads, an FTP / HTTP download server the data files. GSAC does not download files. GSAC tells users how and where to download files via a URL to the file.  GSAC itself can run on a web server different from the server(s) for downloads, a benefit. 

    A Linux system for the initial installation and tests of your GSAC web site, with related software tools bash, Java JDK 1.6 or 1.7, subversion ("svn"), and ant, and with access to your GSAC database. 

    the GSAC software package provided by UNAVCO. GSAC is free and open source code in the GSAC package on SourceForge (http://sourceforge.net/projects/gsac).

A typical Linux system for the initial installation and test of GSAC could be Ubuntu, version 11, 12 or 13. Use the bash shell.  Ubuntu with bash has very simple installation of the software tools you need. Debian Linux should work well; Mac may also use these tools.

Java version 1.6 or 1.7 works. Ubuntu may come with Java JDK which is all you need for GSAC builds. If your system lacks Java, or to upgrade to Java (JDK) 1.7, do:
sudo apt-get install openjdk-7-jdk
sudo update-alternatives --config java       Choose the item for the Java version you want.
In ~/.bashrc, add
export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-i386
and do command source ~/.bashrc

To install ant, do command sudo apt-get install ant

To install subversion ("svn"), do command sudo apt-get install subversion

If you elect to use MySQL (see below), versions 5.1 to 5.5 work. Do the command sudo apt-get install mysql-server
This requests a you to enter a new so-called "root" password for MySQL use, which is a new password, not your Linux system root password.

Installation of GSAC on Debian Linux may be as easy, for Debian users.  

In principle you may be able to install GSAC on a Mac. It may be more difficult than using Linux.  
The Mac OS does not come with svn but can use svn.  Instructions about how to install svn on the Mac are online (for example http://www.wikihow.com/Install-Subversion-on-Mac-OS-X).  

################################################################################

The GSAC Database

An essential part of GSAC installation and operations, which is not available from online resources, is a database which you create and maintain, about sites (stations), their instruments, and their data files (if any). The GSAC database contains the information about stations which you wish to offer online, and about stations' data files which you wish to offer for download. The database must contain up-to-date, complete, and correct information if GSAC services are to represent your data repository correctly. (The GSAC database is also a good way to manage contents of your data repository, aside from GSAC operations, if it is well designed. To manage a data center, a well-designed database is much less error prone, and much more suited to computer operations, than text files such as IGS site logs or SINEX files.)

There are two ways to supply a database for GSAC. First, you can use an existing Oracle, Postgres, or MySQL database about your data holdings and stations, if it has the database fields used by GSAC. See the GSAC database schema notes at http://facility.unavco.org/data/gsacws/docs/Prototype_GSAC_Database_MySQL_schema_notes.txt. This set of parameters enables GSAC to provide its complete suite of web services for searching for geodesy stations information and for station instrument data files, and for data file downloads by GSAC. This list is provided so that persons considering GSAC may see if they have adequate types of metadata in an exisiting database to support GSAC web services. In general the fields which may be NULL in the database are not required for GSAC operations. This schema is for MySQL but the parallel to Postgres and Oracle should be clear.

Or, second, you can create a new a database for GSAC for your data center. UNAVCO supplies a standard or prototype GSAC database in MySQL (a schema in a MySQL .sql or dump file). The schema supports geodesy data search and discovery, and all the GSAC formats of search results including web pages, and SINEX and GAMIT station.info files. You can download the MySQL schema .sql file 
Prototype_GSAC_Database.sql (http://facility.unavco.org/data/gsacws/docs/Prototype_GSAC_Database.sql) for the prototype GSAC database (a MySQL "dump file"). (You can look at this MySQL file in your browser too: click on it.) This prototype schema may be revised in future, but it is quite complete now.
To understand the meaning of tables and fields in this database, see the GSAC database schema notes at http://facility.unavco.org/data/gsacws/docs/Prototype_GSAC_Database_MySQL_schema_notes.txt. 

The tables and fields (columns) in the prototype GSAC schema show the essential parameters needed for GSAC, and their data types. The prototype design corresponds to common geodesy needs, such as encapsulating station receiver-antenna sessions, and helps avoid error-prone database practices, such as storing latitude values or time values in a character strings. The prototype design includes features to insure reduced problems in an archive database. For example, only actual dates and numbers can be stored in date and number fields. Databases which store dates or numbers as character strings are error-prone and difficult to manage. GSAC uses all times and dates in UTC, in ISO 8601 format.

To create a new MySQL GSAC prototype database using that .sql file:
- if you do not have MySQL, install it. On some Linux systems you can simply do the command sudo apt-get install mysql-server. This requests a you to enter a new so-called "root" password for MySQL use, which is a new password, not your Linux system root password.
- start the MySQL server, for example in Linux with "sudo /etc/init.d/mysql restart"
- cd to the folder with the file Prototype_GSAC_Database.sql
- edit the .sql file to change the name of the database, before you use mysql to create the database. You can change all instances of `Prototype_GSAC_Database` to your new db name, something like MyCenter_GSAC_database; the name is not particularly important and will not be publically visible.
- run mysql as mysql root and create a new MySQL account for GSAC, called for example gsac
- run the mysql command line tool, such as, in Linux, "mysql -u gsac -p"
(MySQL documentation is online, as at http://dev.mysql.com/doc/refman/5.1/en/index.html).
- in mysql (mysql>) do the command source Prototype_GSAC_Database.sql; (including the ;)

This creates a GSAC prototype MySQL database, which is of course initially empty of your GNSS metadata. 

################################################################################

Populate the Database

You need to populate the database with the information about your stations, instruments, and instrument data files. UNAVCO has a script to populate the GSAC prototype database with information about geodesy data files you already have on an FTP or HTTP site. UNAVCO is creating a script to populate a GSAC prototype database from a SINEX file (which may be tricky to use). If you use the GSAC prototype database design, you can email UNAVCO to get whatever version of these scripts we have to help you populate your database. The scripts are written in Python.

UNAVCO can aid and advise about GSAC installations and operations. UNAVCO has a responsibility to ensure that GSAC itself installs properly. UNAVCO can help install GSAC, in some cases including providing a provisional working database with some of your data center's information, if some conditions are met including your use of the provisional database schema. UNAVCO will populate the provisional database with an initial but incomplete set of data, just enough to ensure that GSAC is working.

Completely populating your database, and maintaining it, is necessary to operate GSAC, but doing so is entirely outside of GSAC -- see the diagram on the home page of the GSAC web site -- and is your responsibility. 

Also, GSAC does not check data values, GNSS file quality, or otherwise manage a data archive. GSAC can not update your database. GSAC is web services, not a content management system. 
And GSAC is intentionally designed to *not* "know" (much) about geodesy, to keep it adapable to a wide range of services and to 
simplify adding new, and as yet unknown, features. 

################################################################################    ################################################################################

Installing the GSAC Web Services Software Package for a Data Repository, Part 1.

 
Creating the initial GSAC Server at your repository


Choose or make a top-level working directory for GSAC, and go there. For example:

mkdir ~/GSAC/

cd    ~/GSAC/

Check out the GSAC code from SourceForge by entering this command:
(to get this command, go to https://sourceforge.net/projects/gsac/ and click on the 'Code' menu item in the 'Summary Files ...' menu line)

svn checkout svn://svn.code.sf.net/p/gsac/code/trunk gsac-code

The svn checkout creates a new folder gsac-code and many folders and files in it.

cd gsac-code/

Do an initial ant build with the command:

ant

Next, edit 

gsac-code/src/org/gsac/gsl/htdocs/repositorymap.js 

to set the longitude, latitude, and zoom level for the center of the map GSAC shown shows in site search results on a web page.  For example:

  var defaultLocation = new OpenLayers.LonLat(14.15, 48.5);
  var defaultZoomLevel = 5;

The value defaultZoomLevel = 4 will show all of western Europe; 6 will show an area about 1200 km wide by 800 km high. 


Rebuild the GSAC core code with command 'ant', executed in ~/GSAC/gsac-code/.  
You may find the screen messages interesting to show the process of a GSAC build. 

Next

cd  ~/GSAC/gsac-code/src/org/gsac/template/

Copy prototypemacros.properties to a temporary working file:  

cp prototypemacros.properties   mymacros.properties  

The new file name does not matter, but do not use the file prototypemacros.properties itself.  mymacros.properties is fine. 

Edit the new properties file to set values for your repository GSAC:

The initial file:
##
## Properties used to generate a new GSAC-WS repository. See README (part 1) in gsac-code/src/org/gsac/.
##
## Name of the repository; spaces are allowed.  You can use any character string such as The My Repo GPS GSAC Repository
target.name=Prototype GSAC Repository
## This is used to create the jar and war release file names; for example myrepogsac.
target.basename=prototype_gsac
## the new package name; replace the 'prototype' part, making for example org.gsacmyrepo.gsac
target.package=org.prototype.gsac
## Java class (file) name prefix.  All of the new java classes (and new .java files) will have this as a prefix for their names
## Replace Prototype with a word with no spaces like Myrepo, and with only the first letter in upper case, to match Java class naming conventions.
target.prefix=Prototype
## What Java database driver file to use?  Choose one of these three:
target.dbdriver=mysql.jar
#target.dbdriver=oracleDriver.jar
#target.dbdriver=postgres.jar
 
becomes something like this:

## Properties used to generate a new GSAC-WS repository. See README (part 1) in gsac-code/src/org/gsac/.
target.name=Myrepo GSAC Repository  
target.basename=gsacmyrepo     
target.package=org.myrepo.gsac // The Java package name. If not beginning with org, see notes below for the Java package name.
target.prefix=Myrepo           
target.dbdriver=mysql.jar     

Then

cd ../   

to src/org/gsac/. Then run a command like this, with the new macros.properties file:

ant -propertyfile template/mymacros.properties makerepository   

Screen output should be like this:
gsac-code/src/org/gsac > ant -propertyfile template/myrepomacros.properties makerepository
Buildfile: build.xml
init:
makerepository:
     [echo] dir = org/myrepo/gsac
     [echo] dots = ../../../..
    [mkdir] Created dir: /home/GSAC/gsac-code/src/org/myrepo/gsac
     [copy] Copying 16 files to /home/GSAC/gsac-code/src/org/myrepo/gsac
init:
copyjava:
     [copy] Copying 1 file to /home/GSAC/gsac-code/src/org/myrepo/gsac
init:
copyjava:
     [copy] Copying 1 file to /home/GSAC/gsac-code/src/org/myrepo/gsac
init:
copyjava:
     [copy] Copying 1 file to /home/GSAC/gsac-code/src/org/myrepo/gsac
init:
copyjava:
     [copy] Copying 1 file to /home/GSAC/gsac-code/src/org/myrepo/gsac
init:
copyjava:
     [copy] Copying 1 file to /home/GSAC/gsac-code/src/org/myrepo/gsac
init:
copyjava:
     [copy] Copying 1 file to /home/GSAC/gsac-code/src/org/myrepo/gsac
     [echo] Repository source package has been created
BUILD SUCCESSFUL

Look to be sure no errors are sent to the screen.  

This process creates a new code area, beginning with a new folder, such as

~/GSAC/gsac-code/src/org/myrepo/ 

and populates it with initial all-new directories and files for your GSAC repository's code.

cd to the just-made new directory with new GSAC code just for your repository, such as 

cd ~/GSAC/gsac-code/src/org/myrepo/gsac/. 

Follow the README file there to complete your GSAC installation. That is README Part 2. 

(end of basic installation section of README Part 1).

################################################################################ ################################################################################
################################################################################ ################################################################################

To Build a Federated GSAC

(not a GSAC to offer web services for a local data repository)

Two or more GSAC repositories may choose to collaborate to offer a single "federated" GSAC repository which, while maintaining the independence of each individual GSAC repository, allows for merged or joint searches of all the collaborating GSACs at once.

A "federated GSAC" is an independent GSAC and is a new separate GSAC installation. Unlike a basic data repository GSAC, it does not use a local database with information about local data resources. Rather it "knows about" two or more other data repository GSACs, and queries them for information, using their published API search capabiliities. A federated GSAC does not store any data from the collaborating individual GSAC repositories. Among several advantages, this means a federated GSAC always shows the most recent data available from the collaborating individual GSAC repositories.

Installing a federated GSAC is different from installing a data repository GSAC. See the GSAC installation README Part 1 file. A federated GSAC can run on a web server remote from servers at data repositories with databases and FTP/HTML download of data files. Or one web server can run one or more individual (data repository) GSAC repositories, and a federated GSAC, at the same time with no internal connections between them. 


To install a federated GSAC, a single GSAC server which merges searches and results from
two or more other GSAC repositories, here is the first step.

Modify the file

gsac-code/src/org/gsac/federated/resources/gsacserver.properties

You connect to other GSACs in the file:

# Server info
gsac.server.hostname=repodev.unavco.org
gsac.server.port=80

#The list of remote server ids we are using

#For each of these the federated repository looks for:
#gsac.federated.<id>.url=base gsac url
#gsac.federated.<id>.name=repository name
#gsac.federated.<id>.icon=url to icon for the repository

gsac.federated.servers=unavcodev,sopac,cddis

gsac.federated.unavcodev.url=http://repodev.unavco.org/gsacws
gsac.federated.unavcodev.name=UNAVCO GSAC Repository
gsac.federated.unavcodev.icon=http://www.unavco.org/favicon.ico

gsac.federated.cddis.url=http://cddis.gsfc.nasa.gov/gsacws
gsac.federated.cddis.name=CDDIS GSAC Repository
gsac.federated.cddis.icon=http://cddis.nasa.gov/favicon.ico

gsac.federated.sopac.url=http://geogsac.ucsd.edu:8080/gsacws
gsac.federated.sopac.name=SOPAC GSAC Repository
gsac.federated.sopac.icon=http://sopac.ucsd.edu/favicon.ico

You may wish to extend the web page files
cd gsac-code/src/org/gsac/federated/
resources/header.html
resources/footer.html
package.html


################################################################################

end of README Part 1 for GSAC installation.

Copyright (C) 2013 UNAVCO.

################################################################################
