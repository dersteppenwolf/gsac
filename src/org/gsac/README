
################################################################################

GSAC How to install README, Part 1. (file gsac/trunk/src/org/gsac/README)

How to create a new implementation of the UNAVCO GSAC Web Services suite.
 
UNAVCO's GSAC-WS provides web services for data discovery and data access in a geoscience data repository for remote users, 
through a web site GUI and an API.  The UNAVCO GSAC-WS home page is http://facility.unavco.org/data/gsacws/gsacws.html.

The GSAC document "UNAVCO GSAC WS: Web Services for Geodesy Data Repositories" (http://facility.unavco.org/data/gsacws/docs/UNAVCO_GSAC_Web_services.pdf)
introduces GSAC in detail, lists requirements to run GSAC, and describes the first steps in installing GSAC.  The User Guide 
"UNAVCO GSAC WS: Web Services for Geodesy Data Repositories" (http://facility.unavco.org/data/gsacws/UNAVCO_GSAC_User_Guide.pdf) 
is for persons using data repositories powered by GSAC.

This README files describes the first steps in GSAC installation.

This is the Part 1 README file from  gsac/trunk/src/org/gsac/, and is the first of two README files detailing GSAC installation.

################################################################################

You should have done the following already, which is detailed in "UNAVCO GSAC WS: Web Services for Geodesy Data Repositories"
(which was done already if you are reading this README file in a GSAC installation):  

Creating the initial GSAC Server

Make a working directory for GSAC_WS, and go there:
mkdir ~/gsacws/sourceforge/
cd    ~/gsacws/sourceforge/
Or you can install GSAC code anywhere, starting with the subversion checkout(next).

Check out the GSAC code from SourceForge, using subversion:

svn co https://gsac.svn.sourceforge.net/svnroot/gsac gsac

This svn command creates the new subdirectory "gsac" and files under it. Go to the gsac/trunk/ subdirectory:

cd gsac/trunk/

Do the command "ant" which builds Java code:

ant

This ant command builds the basic GSAC code, including the GSL (the GSAC service layer), and a GSAC server.
The file build.xml is used by ant.

The ant build will create these items in trunk/:
build.xml   dist/   examples/   lib/    README  src/
If you investigate you will find dozens of new files and directories below trunk/.

Next do 
cd src/org/gsac/  

(The full path, such as ~/gsac/sourceforge/gsac/trunk/src/org/gsac, is not shown in commands here)

################################################################################

Next, in working directory src/org/gsac/

What's in src/org/gsac/:
 
   build.xml  used by ant 

   client/  The code files for the Java-based client program for accessing a GSAC repository using its API (not the web site).

   federated/ This is the implemention of the federated repository

   gsl/ This directory has the core GSAC Service Layer implementation files.

   package.html for the web pages

   ramadda/ The files for the RAMADDA GSAC plugin, for the RAMADDA content management system.

   README   Part 1 for GSAC installation

   template/  see below:

################################################################################
Generating Your Initial GSAC-WS repository package
################################################################################

The template directory (src/org/gsac/template/) holds template files for the initial GSAC repository package 
implementation. This allows you to generate a package with all of the boilerplate Java code and build scripts.

What you need to do is define a set of macro values that are used to take the code in the 
template/ package and make an initial GSAC.

Copy the example template/macros.properties file to your own file with a similar name, e.g.:

cd template/
cp macros.properties   myrepomacros.properties

'myrepo' is only a placeholder here, in these instructions.  Replace the 'myrepo' with an approprite name for your agency, project, or repository. 

Edit the new properties file to define the target package name, directory, etc.  For example:

##Name you want for the repository
target.name=myrepo GSAC Repository

##This is used to create the jar and Tomcat's ".war" release file names. Often begins with the 4 characters "gsac:"
target.basename=gsacmyrepo

##target Java package name; replace the 'myrepo' part only:
target.package=org.myrepo.gsac

##All of the java classes will have this prefix as the first part of their names. Capitalize first letter, a Java class naming convention.
target.prefix=Myrepo

# What database driver jar file do we use? (This gets added to the generated build.xml to include the right jar file from Java for db access.)
target.dbdriver=mysql.jar

Other choices for the database driver jar file are postgres.jar and oracleDriver.jar.  Use the one for your database.

Then 

cd ../ 

to src/org/gsac/

and run this ant command in src/org/gsac/, 
replacing the 'myrepomacros.properties' file name with your file name:

ant -propertyfile template/myrepomacros.properties makerepository   

The final lines output to screen should be like:

init:

copyjava:
     [copy] Copying 1 file to ~/gsac/sourceforge/gsac/trunk/src/org/test1/gsac
     [echo] Repository source package has been created

BUILD SUCCESSFUL
Total time: 1 second


The ant process copies all of the source and resource file templates to new directories and files, replacing the macros with
the values you defined in myrepomacros.properties, copying them into the specified new target directory, such as src/org/myrepo/. 
The 'myrepomacros.properties' file is only used this one time.

Now, for example, for a new implementation called test2013a, doing this list (from src/org/gsac/) gets:

ls -l ../test2013a/gsac
-rw-r--r-- 1   9851 2013-02-13 11:38 build.xml
drwxr-xr-x 2   4096 2013-02-13 11:38 dbresources
-rw-r--r-- 1    520 2013-02-13 11:38 gsacrepository.bat
-rw-r--r-- 1    802 2013-02-13 11:38 gsacrepository.sh
-rw-r--r-- 1    779 2013-02-13 11:38 package.html
-rw-r--r-- 1  38199 2013-02-13 11:38 README
drwxr-xr-x 2   4096 2013-02-13 11:38 release
drwxr-xr-x 2   4096 2013-02-13 11:38 resources
-rw-r--r-- 1   2046 2013-02-13 11:38 test2013aDatabaseManager.java
-rw-r--r-- 1   5299 2013-02-13 11:38 test2013aFileManager.java
-rw-r--r-- 1   2443 2013-02-13 11:38 test2013aRepository.java
-rw-r--r-- 1   1666 2013-02-13 11:38 test2013aServer.java
-rw-r--r-- 1  11231 2013-02-13 11:38 test2013aSiteManager.java
-rw-r--r-- 1   3440 2013-02-13 11:38 test2013aTest.java

The template file for the second or Part 2 README file, org/gsac/template/README, has been extended and copied to your new package, for example, 
to src/org/myrepo/gsac/README, and it has the next set of instructions for you to follow to complete your GSAC installation.  

################################################################################

end of README Part 1 for GSAC installation.

Feb. 27, 2013.
Copyright (c) UNAVCO.

################################################################################
